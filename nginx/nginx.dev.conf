user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss
               application/x-javascript;
    gzip_min_length 1000;

    # Rate Limiting Zones (more relaxed for development)
    limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=search:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=stats:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream Backend (local development)
    upstream backend {
        server host.docker.internal:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Upstream Frontend (local development)
    upstream frontend {
        server host.docker.internal:3000;
        keepalive 32;
    }

    # HTTP Server (no HTTPS redirect for local dev)
    server {
        listen 80;
        server_name localhost;

        # Connection limit (more relaxed)
        limit_conn addr 50;

        # Health Check (no rate limit)
        location /health {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }

        # API Endpoints
        location /api/v1/vulnerabilities {
            limit_req zone=api burst=50 nodelay;
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Search Endpoint
        location /api/v1/search {
            limit_req zone=search burst=30 nodelay;
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Stats Endpoint
        location /api/v1/stats {
            limit_req zone=stats burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Other API endpoints
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Metrics endpoint
        location /metrics {
            limit_req zone=stats burst=5 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
        }

        # Frontend - Next.js
        location / {
            limit_req zone=general burst=100 nodelay;

            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Static files
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1d;
            add_header Cache-Control "public";
            access_log off;
        }

        # Next.js static files
        location /_next/static/ {
            proxy_pass http://frontend;
            expires 1d;
            add_header Cache-Control "public";
            access_log off;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom error pages
        error_page 429 /429.html;
        location = /429.html {
            internal;
            default_type text/html;
            return 429 '<html><body><h1>429 Too Many Requests</h1><p>Please slow down and try again later.</p></body></html>';
        }

        error_page 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            default_type text/html;
            return 503 '<html><body><h1>Service Temporarily Unavailable</h1><p>Please try again in a few moments.</p></body></html>';
        }
    }
}
